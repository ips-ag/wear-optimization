import { Maybe } from '@/types';
import { Box, Button, Image, VStack } from '@chakra-ui/react';
import { useCallback, useEffect, useRef, useState } from 'react';
import Webcam from 'react-webcam';

const videoConstraints = {
  facingMode: { exact: 'environment' },
};

interface CaptureImageProps {
  onCapture: (imageSrc: Maybe<string>) => void;
}
export default function CaptureImage({ onCapture }: CaptureImageProps) {
  const [currentDeviceId, setCurrentDeviceId] = useState<string>();
  const [imageSrc, setImageSrc] = useState<Maybe<string>>(null);

  useEffect(() => {
    navigator.mediaDevices.enumerateDevices().then(mediaDevices => {
      const supportDevices = mediaDevices.filter(item => item.kind === 'videoinput');
      console.log(supportDevices);
      if (supportDevices.length > 0) {
        setCurrentDeviceId(supportDevices[0].deviceId);
      }
    });
  }, []);

  const webcamRef = useRef<Webcam>(null);
  const capture = useCallback(() => {
    console.log(webcamRef);
    const imageSrc = webcamRef.current?.getScreenshot?.();
    setImageSrc(imageSrc);
    onCapture(
      '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',
    );
  }, [webcamRef]);

  return (
    <VStack>
      <Box maxW={'640'} border={1} borderStyle={'dashed'} borderColor={'grey.100'} rounded={'sm'}>
        {imageSrc ? (
          <Image w={'full'} src={imageSrc || ''} />
        ) : (
          <Webcam
            width={'100%'}
            audio={false}
            ref={webcamRef}
            screenshotFormat="image/png"
            videoConstraints={{ ...videoConstraints, deviceId: currentDeviceId }}
          />
        )}
      </Box>
      {imageSrc ? (
        <Button onClick={() => setImageSrc(null)}>Retake</Button>
      ) : (
        <Button onClick={capture}>Capture</Button>
      )}
    </VStack>
  );
}
